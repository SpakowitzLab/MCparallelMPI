diff --git a/code/MCcode/MC_elasRodCoil.f95 b/code/MCcode/MC_elasRodCoil.f95
index 2394cb2..5dc69d9 100755
--- a/code/MCcode/MC_elasRodCoil.f95
+++ b/code/MCcode/MC_elasRodCoil.f95
@@ -45,26 +45,26 @@ DEELAS(3)=0.0_dp
 
 !     Calculate the change in the energy
 
-if (AB(IT1-1).eq.0 .and. AB(IT1).eq.0) then
-    EB=elasParam0%EB
-    EPAR=elasParam0%EPAR
-    EPERP=elasParam0%EPERP
-    GAM=elasParam0%GAM
-    ETA=elasParam0%ETA
-else if (AB(IT1-1).eq.1 .and. AB(IT1).eq.1) then
-    EB=   elasParam1%EB
-    EPAR= elasParam1%EPAR
-    EPERP=elasParam1%EPERP
-    GAM=  elasParam1%GAM
-    ETA=  elasParam1%ETA
-else
-    EB=   (elasParam1%EB   + elasParam0%EB   )/2 
-    EPAR= (elasParam1%EPAR + elasParam0%EPAR )/2
-    EPERP=(elasParam1%EPERP+ elasParam0%EPERP)/2
-    GAM=  (elasParam1%GAM  + elasParam0%GAM  )/2
-    ETA=  (elasParam1%ETA  + elasParam0%ETA  )/2
-endif
 if (IB1.NE.1) then
+   if (AB(IT1-1).eq.0 .and. AB(IT1).eq.0) then
+       EB=elasParam0%EB
+       EPAR=elasParam0%EPAR
+       EPERP=elasParam0%EPERP
+       GAM=elasParam0%GAM
+       ETA=elasParam0%ETA
+   else if (AB(IT1-1).eq.1 .and. AB(IT1).eq.1) then
+       EB=   elasParam1%EB
+       EPAR= elasParam1%EPAR
+       EPERP=elasParam1%EPERP
+       GAM=  elasParam1%GAM
+       ETA=  elasParam1%ETA
+   else
+       EB=   (elasParam1%EB   + elasParam0%EB   )/2 
+       EPAR= (elasParam1%EPAR + elasParam0%EPAR )/2
+       EPERP=(elasParam1%EPERP+ elasParam0%EPERP)/2
+       GAM=  (elasParam1%GAM  + elasParam0%GAM  )/2
+       ETA=  (elasParam1%ETA  + elasParam0%ETA  )/2
+   endif
    
    DR(1)=R(IT1,1)-R(IT1-1,1)
    DR(2)=R(IT1,2)-R(IT1-1,2)
@@ -104,26 +104,26 @@ if (IB1.NE.1) then
    
 endif
 
-if (AB(IT2).eq.0 .and. AB(IT2+1).eq.0) then
-    EB=elasParam0%EB
-    EPAR=elasParam0%EPAR
-    EPERP=elasParam0%EPERP
-    GAM=elasParam0%GAM
-    ETA=elasParam0%ETA
-else if (AB(IT2).eq.1 .and. AB(IT2+1).eq.1) then
-    EB=   elasParam1%EB
-    EPAR= elasParam1%EPAR
-    EPERP=elasParam1%EPERP
-    GAM=  elasParam1%GAM
-    ETA=  elasParam1%ETA
-else
-    EB=   (elasParam1%EB   + elasParam0%EB   )/2 
-    EPAR= (elasParam1%EPAR + elasParam0%EPAR )/2
-    EPERP=(elasParam1%EPERP+ elasParam0%EPERP)/2
-    GAM=  (elasParam1%GAM  + elasParam0%GAM  )/2
-    ETA=  (elasParam1%ETA  + elasParam0%ETA  )/2
-endif
 if (IB2.NE.NB) then
+   if (AB(IT2).eq.0 .and. AB(IT2+1).eq.0) then
+       EB=elasParam0%EB
+       EPAR=elasParam0%EPAR
+       EPERP=elasParam0%EPERP
+       GAM=elasParam0%GAM
+       ETA=elasParam0%ETA
+   else if (AB(IT2).eq.1 .and. AB(IT2+1).eq.1) then
+       EB=   elasParam1%EB
+       EPAR= elasParam1%EPAR
+       EPERP=elasParam1%EPERP
+       GAM=  elasParam1%GAM
+       ETA=  elasParam1%ETA
+   else
+       EB=   (elasParam1%EB   + elasParam0%EB   )/2 
+       EPAR= (elasParam1%EPAR + elasParam0%EPAR )/2
+       EPERP=(elasParam1%EPERP+ elasParam0%EPERP)/2
+       GAM=  (elasParam1%GAM  + elasParam0%GAM  )/2
+       ETA=  (elasParam1%ETA  + elasParam0%ETA  )/2
+   endif
    
    DR(1)=R(IT2+1,1)-R(IT2,1)
    DR(2)=R(IT2+1,2)-R(IT2,2)
diff --git a/code/MCcode/MCsim.f95 b/code/MCcode/MCsim.f95
index feaeda7..d2a6974 100755
--- a/code/MCcode/MCsim.f95
+++ b/code/MCcode/MCsim.f95
@@ -79,7 +79,7 @@ SUBROUTINE MCsim(mc,md,NSTEP,INTON,rand_stat)
 
 
     ! --- Elastic Energy ---
-    call energy_elas(mc%DEELAS,md%R,md%U,md%AB,mc%NT,mc%NB,mc%NP,mc%elasParam0,mc%elasParam1)
+    call energyElasRodCoil(mc%DEELAS,md%R,md%U,md%AB,mc%NT,mc%NB,mc%NP,mc%elasParam0,mc%elasParam1)
     if(abs((mc%EElas(1)+  mc%EElas(2)+ mc%EElas(3))-& 
            (mc%DEElas(1)+mc%DEElas(2)+mc%DEElas(3))).gt.0.0001) then
         print*, "Warning. Integrated elastic enrgy:", &
@@ -194,7 +194,6 @@ SUBROUTINE MCsim(mc,md,NSTEP,INTON,rand_stat)
               ((MCTYPE.eq.5).or.(MCTYPE.eq.6))) then
               CYCLE
           endif
-          
           call MC_move(md%R,md%U,md%RP,md%UP,mc%NT,mc%NB,mc%NP, &
                        IP,IB1,IB2,IT1,IT2,MCTYPE, & 
                        mc%MCAMP,mc%WINDOW,md%AB,md%ABP,mc%G,&
diff --git a/code/SIMcode/simMod.f90 b/code/SIMcode/simMod.f90
index 46f9ac0..6746cbf 100644
--- a/code/SIMcode/simMod.f90
+++ b/code/SIMcode/simMod.f90
@@ -20,6 +20,9 @@ Module simMod
     INTEGER NB                ! Number of beads in a polymer NB=N*G
     INTEGER N                 ! Number of monomers in a polymer
     INTEGER G                 ! Beads per monomer
+    INTEGER numA              ! beads in A monomer
+    INTEGER numB              ! beads in B monomer
+    INTEGER numLink           ! beads in linker
     INTEGER NP                ! Number of polymers
     DOUBLE PRECISION LBOX(3)  ! Box length (approximate)
     DOUBLE PRECISION DEL      ! Discretization size (approximate)
@@ -349,8 +352,16 @@ Subroutine MCvar_setParams(mc,fileName)
            Call READF(mc%LBox(3)) ! side length of box in z direction
        CASE('NP')
            CALL READI(mc%NP)  ! Number of polymers
+       CASE('NUMA')
+           Call READI(mc%numA) ! Beads per A monomer
+       CASE('NUMB')
+           Call READI(mc%numB) ! Beads per B monomer
+       CASE('NUMLINK')
+           Call READI(mc%numLink) ! Beads in linker
        CASE('G')
            Call READI(mc%G) ! Beads per monomer
+       CASE('NB')
+           CALL READI(mc%NB) ! Number of beads in a polymer
        CASE('N')
            CALL READI(mc%N) ! Number of monomers in a polymer
        CASE('NNOINT')
@@ -483,21 +494,6 @@ Subroutine MCvar_setParams(mc,fileName)
     ENDDO
     close(PF)
 
-    if ((mc%NBINX(1)-mc%NBINX(2).ne.0).or. &
-        (mc%NBINX(1)-mc%NBINX(3).ne.0)) then
-        if (mc%simType.eq.1) then
-            print*, "Solution not tested with non-cube box, more coding needed"
-            stop 1
-        endif
-        if (mc%confineType.ne.4) then
-            print*, "Unequal boundaries require confineType=4"
-            stop 1
-        endif    
-        if (mc%setType.eq.4) then
-            print*, "You shouldn't put a shpere in and unequal box!"
-            stop 1
-        endif    
-    endif
     ! --------------------
     !
     ! Derived Variables, Reconcile inputs
@@ -523,27 +519,30 @@ Subroutine MCvar_setParams(mc,fileName)
         mc%LBOX(2) = mc%NBINX(2)*mc%DEL! used to be: DEL=LBOX/NBINX
         mc%LBOX(3) = mc%NBINX(3)*mc%DEL! used to be: DEL=LBOX/NBINX
     elseif (mc%simType.eq.0) then
-        if (mc%confineType.eq.0) then
-            mc%NP=nint(mc%Fpoly*mc%LBOX(1)*mc%LBOX(2)*mc%LBOX(3)/(mc%N*mc%G*mc%V))
-            mc%LBOX=(mc%V*mc%N*mc%G*mc%NP/mc%Fpoly)**(1.0_dp/3.0_dp)
-            mc%NBINX(1)=nint(mc%LBOX(1)/mc%DEL)
-            mc%NBINX(2)=nint(mc%LBOX(2)/mc%DEL)
-            mc%NBINX(3)=nint(mc%LBOX(3)/mc%DEL)
-            mc%DEL=mc%LBOX(1)/mc%NBINX(1)
-        elseif(mc%confineType.eq.4) then
-            mc%DEL=mc%LBOX(1)/nint(mc%LBOX(1)/mc%DEL)
-            mc%NBINX(1)=nint(mc%LBOX(1)/mc%DEL)
-            mc%NBINX(2)=nint(mc%LBOX(2)/mc%DEL)
-            mc%NBINX(3)=nint(mc%LBOX(3)/mc%DEL)
-            mc%LBOX(2)=mc%DEL*mc%NBINX(2)
-            mc%LBOX(3)=mc%DEL*mc%NBINX(3)
-            mc%NP=nint(mc%LBOX(1)*mc%LBOX(2)*mc%LBOX(3)/(mc%N*mc%G*mc%V))
-            print*, "Density =", &
-                  mc%N*mc%G*mc%V*mc%NP/(mc%LBOX(1)*mc%LBOX(2)*mc%LBOX(3))
-        endif
+        mc%NBINX(1)=nint(mc%LBOX(1)/mc%DEL)
+        mc%NBINX(2)=nint(mc%LBOX(2)/mc%DEL)
+        mc%NBINX(3)=nint(mc%LBOX(3)/mc%DEL)
+        !if (mc%confineType.eq.0) then
+        !    mc%NP=nint(mc%Fpoly*mc%LBOX(1)*mc%LBOX(2)*mc%LBOX(3)/(mc%N*mc%G*mc%V))
+        !    mc%LBOX=(mc%V*mc%N*mc%G*mc%NP/mc%Fpoly)**(1.0_dp/3.0_dp)
+        !    mc%NBINX(1)=nint(mc%LBOX(1)/mc%DEL)
+        !    mc%NBINX(2)=nint(mc%LBOX(2)/mc%DEL)
+        !    mc%NBINX(3)=nint(mc%LBOX(3)/mc%DEL)
+        !    mc%DEL=mc%LBOX(1)/mc%NBINX(1)
+        !elseif(mc%confineType.eq.4) then
+        !    mc%DEL=mc%LBOX(1)/nint(mc%LBOX(1)/mc%DEL)
+        !    mc%NBINX(1)=nint(mc%LBOX(1)/mc%DEL)
+        !    mc%NBINX(2)=nint(mc%LBOX(2)/mc%DEL)
+        !    mc%NBINX(3)=nint(mc%LBOX(3)/mc%DEL)
+        !    mc%LBOX(2)=mc%DEL*mc%NBINX(2)
+        !    mc%LBOX(3)=mc%DEL*mc%NBINX(3)
+        !    mc%NP=nint(mc%LBOX(1)*mc%LBOX(2)*mc%LBOX(3)/(mc%N*mc%G*mc%V))
+        !    print*, "Density =", &
+        !          mc%N*mc%G*mc%V*mc%NP/(mc%LBOX(1)*mc%LBOX(2)*mc%LBOX(3))
+        !endif
         mc%NB=mc%N*mc%G
-        mc%NBIN=mc%NBINX(1)*mc%NBINX(2)*mc%NBINX(3)
         mc%NT=mc%N*mc%NP*mc%G
+        mc%NBIN=mc%NBINX(1)*mc%NBINX(2)*mc%NBINX(3)
         mc%WINDOW(5)=mc%NB
         mc%WINDOW(6)=mc%NB
         mc%WINDOW(8)=mc%NB
@@ -558,6 +557,7 @@ Subroutine MCvar_setParams(mc,fileName)
         mc%MAXWINDOW(7)=min(150,mc%NB)
         mc%MAXAMP(2)=1.0_dp*mc%L0
         mc%MAXAMP(6)=0.1*mc%LBOX(1)
+
     else
        print*, "Error in simMod: symType",mc%simType," not found"
     endif 
@@ -666,7 +666,7 @@ Subroutine MCvar_allocate(mc,md)
     NT=mc%NT
     NBIN=mc%NBIN
     
-    if ((NT.GT.200000).OR.(NT.lt.1)) then
+    if ((NT.GT.500000).OR.(NT.lt.1)) then
         print*, "Tried to allocate ", NT," beads in MCvar_allocate"
         stop 1
     endif 
diff --git a/code/SIMcode/wlcsim.f95 b/code/SIMcode/wlcsim.f95
index 1bf80a1..85f1016 100755
--- a/code/SIMcode/wlcsim.f95
+++ b/code/SIMcode/wlcsim.f95
@@ -78,7 +78,9 @@ Subroutine wlcsim(rand_stat)
           iostr='input/ab'
           call MCvar_loadAB(mc,md,iostr)
       ELSE
-          call initchem(md%AB,mc%NT,mc%N,mc%G,mc%NP,mc%FA,mc%LAM,rand_stat)
+          call initchemJie(md%AB,mc%NT,mc%NP,mc%FA,mc%LAM,rand_stat, & 
+                           mc%numA,mc%numB,mc%numLink)
+          !call initchem(md%AB,mc%NT,mc%N,mc%G,mc%NP,mc%FA,mc%LAM,rand_stat)
       ENDIF
     
       
diff --git a/code/elasmod.mod b/code/elasmod.mod
index b15433b..375210a 100644
Binary files a/code/elasmod.mod and b/code/elasmod.mod differ
diff --git a/code/simmod.mod b/code/simmod.mod
index 16125b3..e6d6af3 100644
Binary files a/code/simmod.mod and b/code/simmod.mod differ
diff --git a/input/params b/input/params
index 52aebaf..b62cf28 100644
--- a/input/params
+++ b/input/params
@@ -15,26 +15,32 @@ PTON T
 PT_CHI T
 
 # Chain parameters
-G 5
-N 8
+NP 4000
+G 1
+N 50
+NB 50
+NUMA 2
+NUMLINK 2
+NUMB 5
 FA 0.5
-LAM -0.75
-L0 0.466329
-L0_1 0.466329
-EPS 0.1
-EPS_1 0.1
-V 0.1
+LAM 0.0
+L0 0.802
+L0_1 0.318
+EPS 2.066
+EPS_1 0.104
+V 0.03333
 
 # Simulation parameters
-FPOLY 0.5
-LBOX 20
+FPOLY 0.4
+LBOX 25
 DEL 1.0000
-CHI 1.0
+CHI 0.0
 KAP 10
 H_A 0.0
 
 # Simulation schedule
-NSTEP 4000000
+#NSTEP 4000000
+NSTEP 100000
 NPT 100
 NNOINT 10
 INDMAX 1000
@@ -49,7 +55,7 @@ LOWER_REP_EXE 0.12
 UPPER_REP_EXE 0.22
 LOWER_COF_RAIL 0.005
 UPPER_COF_RAIL 0.5
-REP_ANNEAL_SPEED 0.03
+REP_ANNEAL_SPEED 0.05
 REPLICA_BOUNDS F
 INITIAL_MAX_S 0.1
 
@@ -62,8 +68,8 @@ FULL_CHAIN_ROTATION_ON 1
 FULL_CHAIN_SLIDE_ON 1
 BIND_MOVE_ON 0
 CHAIN_FLIP_MOVE_ON 0
-CHAIN_SWAP_MOVE_ON 1
-REPTATION_MOVE_ON 1
+CHAIN_SWAP_MOVE_ON 0
+REPTATION_MOVE_ON 0
 RECENTER_ON T
 WINTYPE 1
 MIN_SLIDE_WIN 6
diff --git a/runwlcsim.sh b/runwlcsim.sh
index e1cc536..5bb214d 100755
--- a/runwlcsim.sh
+++ b/runwlcsim.sh
@@ -5,7 +5,7 @@ rm MCparrll_out
 cd code
 # compile with mpi's fortran compiler
 mpifort -c DATAcode/* mersenne_twister.f90
-mpifort -c -fbounds-check -Wall -W -fmax-errors=5 -O5 SIMcode/*  MCcode/* 
+mpifort -c -fbounds-check -Wall -W -fmax-errors=5 -O1 SIMcode/*  MCcode/* 
 mpifort *.o -o MCparrll_out 
 rm *.o
 cd ..
@@ -17,4 +17,4 @@ touch data/error
 echo "Now run"
 # now run the output
 # --prefix used to avoid changing path
-mpirun -np 80 MCparrll_out
+mpirun -np 15 MCparrll_out
diff --git a/simmod.mod b/simmod.mod
index e2aebc6..1d42c2a 100644
Binary files a/simmod.mod and b/simmod.mod differ
